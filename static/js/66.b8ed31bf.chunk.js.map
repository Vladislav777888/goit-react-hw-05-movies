{"version":3,"file":"static/js/66.b8ed31bf.chunk.js","mappings":"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","sources":["components/Box/Box.jsx","components/NotFound/NotFound.styled.jsx","components/NotFound/NotFound.jsx","constants/baseUrl.js","constants/status.constants.js","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/InnerMovieDetails/InnerMovieDetails.styled.jsx","components/InnerMovieDetails/InnerMovieDetails.jsx","components/AdditionalInfo/AdditionalInfo.styled.jsx","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetails/MovieDetails.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n`;\n","import image from './noposts.jpeg';\nimport { Wrapper } from './NotFound.styled';\n\nexport const NotFound = () => {\n  return (\n    <Wrapper>\n      <img src={image} alt=\"not found\" style={{ width: 300 }} />\n    </Wrapper>\n  );\n};\n","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const FAKE_POSTER =\n  'https://freesvg.org/img/cyberscooty-movie-video-tape-remix.png';\n\nexport const FAKE_ACTOR_PHOTO =\n  'https://cdn0.iconfinder.com/data/icons/people-12/24/Anonymous-2-512.png';\n","export const STATUS = {\n  idle: 'idle',\n  loading: 'loading',\n  success: 'success',\n  error: 'error',\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  margin-left: 16px;\n  gap: 4px;\n  padding: 15px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: #ff4500;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Img = styled.img`\n  width: 300px;\n  height: 400px;\n`;\n\nexport const Text = styled.p`\n  margin-top: 20px;\n`;\n\nexport const Title = styled.h3`\n  margin-top: 20px;\n`;\n\nexport const Genre = styled.span`\n  display: inline-flex;\n  padding-right: 16px;\n  margin-top: 20px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Box } from 'components/Box';\nimport { Img, Text, Title, Genre } from './InnerMovieDetails.styled';\n\nconst InnerMovieDetails = ({ movie }) => {\n  const {\n    original_title,\n    vote_average,\n    overview,\n    poster_path,\n    release_date,\n    genres,\n  } = movie;\n\n  return (\n    <Box display=\"flex\" px={4} borderBottom=\"normal\" pb={3}>\n      <Img src={poster_path} alt={original_title} />\n      <Box p={4}>\n        <h2>\n          {original_title} <span>({release_date.split('-')[0]})</span>\n        </h2>\n        <Text>User Score: {Math.round(vote_average * 10)}%</Text>\n        <Title>Overview</Title>\n        <Text>{overview}</Text>\n        <Title>Genres</Title>\n        {genres.length > 0\n          ? genres.map(({ id, name }) => <Genre key={id}>{name}</Genre>)\n          : 'genre unknown'}\n      </Box>\n    </Box>\n  );\n};\n\nInnerMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    original_title: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }).isRequired,\n};\n\nexport default InnerMovieDetails;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const InfoList = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  list-style: disc;\n  gap: 5px;\n`;\n\nexport const InfoListItem = styled.li`\n  margin-left: 16px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: ${p => p.theme.colors.blue};\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover:not(.active) {\n    color: ${p => p.theme.colors.yellow};\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Box } from 'components/Box';\nimport { InfoList, InfoListItem, StyledLink } from './AdditionalInfo.styled';\n\nconst AdditionalInfo = ({ state }) => {\n  return (\n    <Box p={4} borderBottom=\"normal\">\n      <p>Additional information</p>\n      <InfoList>\n        <InfoListItem>\n          <StyledLink to=\"cast\" state={state}>\n            Cast\n          </StyledLink>\n        </InfoListItem>\n        <InfoListItem>\n          <StyledLink to=\"reviews\" state={state}>\n            Reviews\n          </StyledLink>\n        </InfoListItem>\n      </InfoList>\n    </Box>\n  );\n};\n\nAdditionalInfo.propTypes = {\n  state: PropTypes.shape({\n    from: PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default AdditionalInfo;\n","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { getMovieDetails } from 'services';\nimport { STATUS } from 'constants';\nimport { BASE_POSTER_URL, FAKE_POSTER } from 'constants/baseUrl';\n\nimport { NotFound } from 'components/NotFound';\nimport { Loader } from 'components/Loader';\nimport { BackLink } from 'components/BackLink';\nimport InnerMovieDetails from 'components/InnerMovieDetails';\nimport AdditionalInfo from 'components/AdditionalInfo';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [status, setStatus] = useState(STATUS.idle);\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setStatus(STATUS.loading);\n\n      try {\n        const data = await getMovieDetails(movieId);\n\n        if (data.length === 0) {\n          throw new Error('We have nothing for this search');\n        }\n\n        if (!data.poster_path) {\n          data.poster_path = FAKE_POSTER;\n        } else {\n          data.poster_path = BASE_POSTER_URL + data.poster_path;\n        }\n\n        if (!data.title) {\n          data.title = 'no name';\n        }\n\n        if (!data.release_date) {\n          data.release_date = '';\n        }\n\n        setMovie({\n          original_title: data.original_title,\n          vote_average: data.vote_average,\n          overview: data.overview,\n          poster_path: data.poster_path,\n          release_date: data.release_date,\n          genres: data.genres,\n        });\n        setStatus(STATUS.success);\n      } catch (error) {\n        console.log(error);\n        setStatus(STATUS.error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      {status === STATUS.success && (\n        <>\n          <BackLink to={backLinkHref}>Go back</BackLink>\n          <InnerMovieDetails movie={movie} />\n          <AdditionalInfo state={{ from: location.state?.from }} />\n          <Suspense fallback={null}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n      {status === STATUS.error && <NotFound />}\n      {(status === STATUS.loading || status === STATUS.idle) && <Loader />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst postsApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await postsApi.get('/trending/movie/day', {\n    params: {\n      api_key: '46cf2a6d2c28bead868caabe4f80f475',\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const { data } = await postsApi.get(`/movie/${movie_id}`, {\n    params: {\n      api_key: '46cf2a6d2c28bead868caabe4f80f475',\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const { data } = await postsApi.get(`/movie/${movie_id}/credits`, {\n    params: {\n      api_key: '46cf2a6d2c28bead868caabe4f80f475',\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const { data } = await postsApi.get(`/movie/${movie_id}/reviews`, {\n    params: {\n      api_key: '46cf2a6d2c28bead868caabe4f80f475',\n    },\n  });\n\n  return data;\n};\n\nexport const getSearchMovies = async (params = {}) => {\n  const { data } = await postsApi.get(`/search/movie`, {\n    params: {\n      api_key: '46cf2a6d2c28bead868caabe4f80f475',\n      ...params,\n    },\n  });\n\n  return data;\n};\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","Wrapper","NotFound","src","image","alt","style","width","BASE_POSTER_URL","FAKE_POSTER","FAKE_ACTOR_PHOTO","STATUS","idle","loading","success","error","StyledLink","Link","BackLink","to","children","size","Img","Text","Title","Genre","movie","original_title","vote_average","overview","poster_path","release_date","genres","display","px","borderBottom","pb","p","split","Math","round","length","map","id","name","InfoList","InfoListItem","theme","colors","blue","yellow","state","movieId","useParams","useState","setMovie","status","setStatus","location","useLocation","backLinkHref","from","useEffect","fetchMovieDetails","getMovieDetails","data","Error","title","console","log","Suspense","fallback","Loader","postsApi","axios","baseURL","getTrendingMovies","get","params","api_key","movie_id","getMovieCredits","getMovieReviews","getSearchMovies"],"sourceRoot":""}